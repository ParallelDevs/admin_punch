<?php

//link de ayuda del modulo
function admin_punch_help($path, $arg) {
  switch ($path) {
    case "admin/help#admin_punch":
      return '' . t("Module built to help employees to set when they came in and go out from work") . '';
    break;
  }
}

//declaracion del bloque
function admin_punch_block_info(){
  $blocks['admin_punch'] = array(
    'info' => t('Admin Punch'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
    );
  return $blocks;
}

//vista del bloque
/*function admin_punch_block_view($delta = ''){
  switch ($delta) {
    case 'admin_punch':
      $block['subject'] = t('Admin Punch!!');
   //   if (user_access('access admin_punch content')) {
         if (user_access('access admin_punch content') && admin_punch_validate()==NULL ) {
      $block['content'] = drupal_get_form('admin_punch_first_form');
      }
    break;
  }
  return $block;
}*/

function admin_punch_block_view($delta = ''){
  switch ($delta) {
    case 'admin_punch':
      $block['subject'] = t('Admin Punch!!');
   //   if (user_access('access admin_punch content')) {
         if (user_access('access admin_punch content')) {
             if(admin_punch_validate()==NULL){
                 $block['content'] = drupal_get_form('admin_punch_first_form');
             }else{
                drupal_set_message(t('you can not see the module admin punch because your ip address are blocked'));     
            }
      
      }
    break;
  }
  return $block;
}


//permiso para los usuarios que tengan permiso, visualicen el bloque
function admin_punch_permission(){
  return array(
    'access admin_punch content' => array(
      'title' => t('Access to admin_punch module'),
    )
  );
}

//formulario para la configuracion
//solo esta el form, faltaria el link en el menu de configuracinones
function admin_punch_form($form, &$form_state){
  $form['administration_form'] = array(
    '#type' => 'textfield',
    '#title' => t('Accepted IP addresses'),
    );
  return system_settings_form($form);
}

//formulario dentro del bloque
function admin_punch_first_form($form, &$form_state){

//este codigo comentado es nada mas para visualizar que la info se esta
//cargando correctamente



/*global $user;
$ka = user_load($user->uid, true);
$ka2 = $ka->uid;
$time = date('h:i:s A');
$addre = ip_address();

  $form['punch_ip_address'] = array(
    '#title' => t('user ip'),
    '#type' => 'textfield',
    '#value' => ip_address(),
    );
  $form['punch_user_id'] = array(
    '#title' => t('user id'),
    '#type' => 'textfield',
    '#value' => $ka2,
    //'#type' => 'hidden',
    );

  $form['punch_time'] = array(
    '#title' => t('Actual time'),
    '#type' => 'textfield',
    '#value' => REQUEST_TIME,
    //'#type' => 'hidden',
    );*/

  $form['button_submit'] = array(
    '#type' => 'submit',
    '#value' => variable_get('btn_punch', 'Punch In'),
    );
  return $form;
}

//hook alter para cambiar el nombre del boton, dependiendo de su esta entrando o
//saliendo (entry_time o exit_time)
//
//
//
function admin_punch_form_alter(&$form, &$form_state, $form_id){


}


//funcion para qe guarde los datos una vez que se presione el boton
function admin_punch_first_form_submit($form, &$form_state){
 
global $user;
$user_full = user_load($user->uid, true);
$only_id = $user_full->uid;
/*$time = date('h:i:s A');
$addre = ip_address();*/
variable_set('ipip', ip_address());

  $punch_query = db_insert('user_punch_time')
->fields(array(
  'uid' => $only_id,
  'entry_time' => REQUEST_TIME,
  'ip_address' => str_replace(".","",variable_get('ipip')),
  ))
->execute();

if (variable_get('btn_punch') == 'Punch In') {
      variable_set('btn_punch', 'Punch Out');
    }else{
      variable_set('btn_punch', 'Punch In');
    }

  drupal_set_message(t('Submitted'));
}



function admin_punch_menu() {
  $items = array();

  $items['admin/company/punchinout'] = array(
    'title' => 'Admin Page',
    'description' => 'Administration for admin_punch module',
    'page callback' => 'admin_punch_Adminpage',
    'access callback' => TRUE,
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'weight'  => 0,
  );
  return $items;
}

//Pagina donde se va a tener el formulario para ingresar las ip que se quiere bloquear
function admin_punch_Adminpage() {

  //$rows = array();
 // $header = array(t('Lista de Ip address'), t('Operacion'));
  
  
  $build['admin_punch_ip_ranges_form'] = drupal_get_form('admin_punch_ip_ranges_form');
 // $build['ip_ranges_banning_table'] = array(
    //'#theme' => 'table', //Muestra el header donde se van a ver las ip bloqueadas o no...
    //'#header' => $header,
   // '#rows' => $rows,
 //);
  return $build; 
  }
   
  function admin_punch_ip_ranges_form($form, $form_state) {
      
  $form['ip_blocked'] = array(
    '#title' => t('Ip Adrress blocked'),
    '#type' => 'textfield',
    '#size' => 48,
    '#required' => TRUE,
    '#maxlength' => 15,
    '#description' => t(' Enter the IP-address  Ej:(192.168.0.1).'),
  );
   $form['description'] = array(
     '#title' => t('Description'),
     '#type' => 'textfield',
     '#size' => 100,
     '#required' => FALSE,
     '#maxlength' => 100,
     '#description' => t('A field to hold the IP description.'),
  );
   $form['actions'] = array('#type' => 'actions');
   $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Add'),
  );

  $form['#submit'][] = 'admin_punch_ip_ranges_form_submit';
  
  
  return $form;
}

function admin_punch_ip_ranges_form_submit($form, &$form_state) {
  

     global $user;
     $user_full = user_load($user->uid, true);
     $only_id = $user_full->uid;
     $punch_query = db_insert('punch_admin')
    ->fields(array(
        'ip_address' => trim($form_state['values']['ip_blocked']),
        'uid' => $only_id,
        'date' => REQUEST_TIME,
        'description' => trim($form_state['values']['description']),
                 ))
    ->execute();
    drupal_set_message(t('Ip Address blocked'));   
}

 function admin_punch_validate() {
    $ip= ip_address();
    $result = db_query('SELECT pid FROM tb_punch_admin WHERE ip_address = :ip', array(':ip' => $ip));
    $IP_user = $result->fetch();
    return $IP_user;
    }


